'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import {
 type SdButtonCustomEvent,
 type SdSelectCustomEvent,
 type SelectOption,
} from '@sellmate/design-system-core';
import {
 SdButton as SdButtonElement,
 defineCustomElement as defineSdButton,
} from '@sellmate/design-system-core/dist/components/sd-button.js';
import {
 SdInput as SdInputElement,
 defineCustomElement as defineSdInput,
} from '@sellmate/design-system-core/dist/components/sd-input.js';
import {
 SdInput as SdInputElement,
 defineCustomElement as defineSdInput,
} from '@sellmate/design-system-core/dist/components/sd-input.js';
import {
 SdSelect as SdSelectElement,
 defineCustomElement as defineSdSelect,
} from '@sellmate/design-system-core/dist/components/sd-select.js';
import {
 SdTag as SdTagElement,
 defineCustomElement as defineSdTag,
} from '@sellmate/design-system-core/dist/components/sd-tag.js';
import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import React from 'react';

export type SdButtonEvents = { onSdClick: EventName<SdButtonCustomEvent<MouseEvent>> };

export const SdButton: StencilReactComponent<SdButtonElement, SdButtonEvents> =
 /*@__PURE__*/ createComponent<SdButtonElement, SdButtonEvents>({
  tagName: 'sd-button',
  elementClass: SdButtonElement,
  // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
  react: React,
  events: { onSdClick: 'sdClick' } as SdButtonEvents,
  defineCustomElement: defineSdButton,
 });

export type SdInputEvents = {
 onOnInput: EventName<CustomEvent<string | number | null>>;
 onOnChange: EventName<CustomEvent<string | number | null>>;
};

export const SdInput: StencilReactComponent<SdInputElement, SdInputEvents> =
 /*@__PURE__*/ createComponent<SdInputElement, SdInputEvents>({
  tagName: 'sd-input',
  elementClass: SdInputElement,
  // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
  react: React,
  events: {
   onOnInput: 'onInput',
   onOnChange: 'onChange',
  } as SdInputEvents,
  defineCustomElement: defineSdInput,
 });

export type SdInputEvents = NonNullable<unknown>;

export const SdInput: StencilReactComponent<SdInputElement, SdInputEvents> =
 /*@__PURE__*/ createComponent<SdInputElement, SdInputEvents>({
  tagName: 'sd-input',
  elementClass: SdInputElement,
  // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
  react: React,
  events: {} as SdInputEvents,
  defineCustomElement: defineSdInput,
 });

export type SdSelectEvents = {
 onValueChanged: EventName<
  SdSelectCustomEvent<{
   value: string | number | null;
   option: SelectOption | null;
  }>
 >;
 onDropDownShow: EventName<CustomEvent<{ isOpen: boolean }>>;
};

export const SdSelect: StencilReactComponent<SdSelectElement, SdSelectEvents> =
 /*@__PURE__*/ createComponent<SdSelectElement, SdSelectEvents>({
  tagName: 'sd-select',
  elementClass: SdSelectElement,
  // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
  react: React,
  events: {
   onValueChanged: 'valueChanged',
   onDropDownShow: 'dropDownShow',
  } as SdSelectEvents,
  defineCustomElement: defineSdSelect,
 });

export type SdTagEvents = NonNullable<unknown>;

export const SdTag: StencilReactComponent<SdTagElement, SdTagEvents> =
 /*@__PURE__*/ createComponent<SdTagElement, SdTagEvents>({
  tagName: 'sd-tag',
  elementClass: SdTagElement,
  // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
  react: React,
  events: {} as SdTagEvents,
  defineCustomElement: defineSdTag,
 });
